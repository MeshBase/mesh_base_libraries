group = "io.github.MeshBase.mesh_base_flutter"
version = "1.0"

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.7.0")
    }
}

apply plugin: "com.android.library"
apply plugin:"maven-publish"

rootProject.allprojects {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
    }
}


android {
    namespace = "io.github.MeshBase.mesh_base_flutter"
    compileSdk = 35

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    defaultConfig {
        minSdk = 24
    }

    dependencies {
        testImplementation("junit:junit:4.13.2")
        testImplementation("org.mockito:mockito-core:5.0.0")
    }

    testOptions {
        unitTests.all {
            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}

dependencies{
//    implementation 'com.google.android.gms:play-services-location:21.3.0'
//    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation "io.github.meshbase:mesh_base_core:1.1"
}

tasks.register('prepareDependencies', Exec) {
    group = 'build setup'
    description = 'Ensures local AAR dependencies are up to date'

    def isWindows = System.properties['os.name']
            .toLowerCase()
            .contains('windows')
    def gradleCmd = isWindows ? 'gradlew.bat' : './gradlew'

    workingDir '../../'
    commandLine gradleCmd, ':mesh_base_core:publishAar'
}

preBuild.dependsOn prepareDependencies
